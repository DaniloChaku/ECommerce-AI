// <auto-generated />
using ECommerce.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ECommerce.DAL.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250429095253_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ECommerce.DAL.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Electronic devices and gadgets",
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Apparel and fashion items",
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Books and literature",
                            Name = "Books"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Items for home and garden",
                            Name = "Home & Garden"
                        });
                });

            modelBuilder.Entity("ECommerce.DAL.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "High-performance laptop with 16GB RAM and 512GB SSD",
                            ImageUrl = "/images/laptop-x1.jpg",
                            Name = "Laptop X1",
                            Price = 1299.99m,
                            StockQuantity = 50
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Latest smartphone with triple camera and 5G connectivity",
                            ImageUrl = "/images/smartphone-pro.jpg",
                            Name = "Smartphone Pro",
                            Price = 899.99m,
                            StockQuantity = 100
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Description = "Comfortable 100% cotton t-shirt available in various colors",
                            ImageUrl = "/images/cotton-tshirt.jpg",
                            Name = "Cotton T-Shirt",
                            Price = 19.99m,
                            StockQuantity = 200
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Description = "Classic fit jeans with durable denim material",
                            ImageUrl = "/images/jeans-classic.jpg",
                            Name = "Jeans Classic",
                            Price = 49.99m,
                            StockQuantity = 150
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            Description = "Comprehensive guide to programming in C#",
                            ImageUrl = "/images/programming-csharp.jpg",
                            Name = "Programming in C#",
                            Price = 39.99m,
                            StockQuantity = 75
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 4,
                            Description = "Complete set of essential tools for gardening",
                            ImageUrl = "/images/garden-tools.jpg",
                            Name = "Garden Tools Set",
                            Price = 89.99m,
                            StockQuantity = 30
                        });
                });

            modelBuilder.Entity("ECommerce.DAL.Entities.Product", b =>
                {
                    b.HasOne("ECommerce.DAL.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ECommerce.DAL.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
